{
  "decks": [
    {
      "id": 1,
      "name": "Rendering in React",
      "description": "React's component structure allows for quickly building a complex web application that relies on DOM manipulation. "
    },
    {
      "name": "React Router",
      "description": "React Router is a collection of navigational components that compose declaratively with your application.",
      "id": 2
    },
    {
      "name": "Countries and their capitals",
      "description": "Use this deck to study capitals of the countries of the world",
      "id": 5
    },
    {
      "name": "Javascript",
      "description": "Javascript interview prep questions",
      "id": 6
    }
  ],
  "cards": [
    {
      "id": 1,
      "front": "Differentiate between Real DOM and Virtual DOM.",
      "back": "Virtual DOM updates are faster but do not directly update the HTML",
      "deckId": 1
    },
    {
      "id": 2,
      "front": "How do you modify the state of a different React component?",
      "back": "Not at all! State is visible to the component only.",
      "deckId": 1
    },
    {
      "id": 3,
      "front": "How do you pass data 'down' to a React child component?",
      "back": "As properties or props",
      "deckId": 1
    },
    {
      "front": "What path will match the follow Route?\n<Route>\n  <NotFound />\n</Route>",
      "back": "All paths. A route with no path matches all URL's",
      "deckId": 2,
      "id": 4
    },
    {
      "front": "What does <Switch> do?",
      "back": "Renders the first matching child <Route> ",
      "deckId": 2,
      "id": 5
    },
    {
      "front": "USA",
      "back": "Washington DC",
      "deckId": 5,
      "id": 6
    },
    {
      "front": "Russia",
      "back": "Moscow",
      "deckId": 5,
      "id": 7
    },
    {
      "front": "Great Britain",
      "back": "London",
      "deckId": 5,
      "id": 8
    },
    {
      "front": "What is Javascript?",
      "back": "A programming language that adds interactivity to web pages",
      "deckId": 6,
      "id": 9
    },
    {
      "front": "What is ES6",
      "back": "ES6, also known as ECMAScript 2015, is a major update to the JavaScript language that introduced a plethora of new features and syntax improvements.",
      "deckId": 6,
      "id": 10
    },
    {
      "front": "What is the difference between == and === in JavaScript, and when would you use each one?",
      "back": "== (Loose Equality / Abstract Equality Operator):\n\n   Compares two values for equality after performing type coercion.\n    This means that if the values being compared are of different types, JavaScript will attempt to convert them to the same type before making \n  the comparison.\n=== (Strict Equality / Strict Comparison Operator):\n\n    Compares both the value and the type of the operands without performing type coercion.\n    For two values to be strictly equal, they must be of the same type and have the same value.",
      "deckId": 6,
      "id": 11
    }
  ]
}